@model HomeIndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

@if (Model != null)
{
    <div class="viewsContainer">
        <h2>Create new Broadcast</h2>
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div style="color:red;" class="alert alert-danger">
                @Model.ErrorMessage
            </div>
        }
        <form class="newBroadcastForm" method="post" action="/Home/Broadcast" enctype="multipart/form-data">
            <div class="newBroadcastFormFlexContainer">
                <textarea class="textArea" name="Message" rows="3"></textarea> <br />
                <input type="file" name="ImageFile">
            </div>
            <input class="postButton" type="submit" value="post" />
        </form>

        <h2>Broadcasts</h2>
        @foreach (var broadcast in Model.Broadcasts)
        {
            <div class="broadcast">
                <p>
                    <b>
                        <img src="~/images/profilePictures/@broadcast.User.ProfileImageFilename" alt="Profile Image">
                        @broadcast.User.Name
                        (@broadcast.Published.ToShortDateString() @broadcast.Published.ToShortTimeString())
                    </b>:
                </p>
                <p>@broadcast.Message</p>

                @if (!string.IsNullOrEmpty(broadcast.ImageFilename))
                {
                    <img style="height:100px" src="~/images/broadcastImages/@broadcast.ImageFilename" alt="Image">
                }

                @if (broadcast.UserThatLikeBroadcasts.Count != 0)
                {
                    <p>@broadcast.UserThatLikeBroadcasts.Count Like</p>
                }

                <form method="post" action="/Home/LikeBroadcast">
                    <input type="hidden" name="BroadcastId" value="@broadcast.Id" />
                    <input type="submit" value="Like" />
                </form>
            </div>
        }
    </div>
}
